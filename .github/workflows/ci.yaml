name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # cargo check using stable
  cargo-check:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os:
          - ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: cargo check
        run: cargo check

  clippy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: clippy 
        # on any clippy or compiler warnings, fail this check
        run: cargo clippy --no-deps --tests -- -D warnings

  cross-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # different operating systems
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
        os:
          - ubuntu-20.04
        toolchain: # Make sure we can also build on the beta compiler as well as our MSRV
          - stable
          - 1.65.0 # MSRV
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      # Generate the Cargo.lock that will be used for the tests so we can upload it as an artifact
      - name: Generate lockfile
        run: cargo generate-lockfile
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Upload Cargo.lock
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.toolchain }}-Cargo.lock
          path: Cargo.lock
      - name: Test using Cross (default features)
        run: cross test --target ${{ matrix.target }}

  format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - uses: taiki-e/cache-cargo-install-action@v1
        with:
          tool: cargo-sort
      - run: cargo fmt --all -- --check
      - run: cargo-sort -w -c
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.3
